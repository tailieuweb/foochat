[{"E:\\GITHUB\\foochat\\client\\src\\index.js":"1","E:\\GITHUB\\foochat\\client\\src\\App.js":"2","E:\\GITHUB\\foochat\\client\\src\\configs\\browserHistory.js":"3","E:\\GITHUB\\foochat\\client\\src\\components\\Authentication\\LoginAdmin.js":"4","E:\\GITHUB\\foochat\\client\\src\\components\\Authentication\\RegisterUser.js":"5","E:\\GITHUB\\foochat\\client\\src\\components\\Authentication\\LoginUser.js":"6","E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\Chat.js":"7","E:\\GITHUB\\foochat\\client\\src\\components\\Authentication\\RegisterAdmin.js":"8","E:\\GITHUB\\foochat\\client\\src\\configs\\url.js":"9","E:\\GITHUB\\foochat\\client\\src\\configs\\socket.js":"10","E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\ChatList\\ChatList.js":"11","E:\\GITHUB\\foochat\\client\\src\\contexts\\ConversationState.js":"12","E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\ChatBox\\ChatBox.js":"13","E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\User\\Info.js":"14","E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\ChatList\\ListConversation.js":"15","E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\User\\Panel.js":"16","E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\ChatList\\SearchBar.js":"17","E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\ChatList\\ListSearchTile.js":"18","E:\\GITHUB\\foochat\\client\\src\\contexts\\AppReducer.js":"19","E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\ChatBox\\TitleBar.js":"20","E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\ChatBox\\MessageList.js":"21","E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\ChatBox\\InputPanel.js":"22","E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\ChatBox\\EmojiPicker.js":"23","E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\ChatList\\Conversation.js":"24","E:\\GITHUB\\foochat\\client\\src\\configs\\getAvatar.js":"25","E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\ChatList\\SearchTile.js":"26","E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\User\\LogoutButton.js":"27","E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\ChatBox\\SingleMessage.js":"28","E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\ChatBox\\TypingIndicator.js":"29"},{"size":151,"mtime":1607323122427,"results":"30","hashOfConfig":"31"},{"size":1172,"mtime":1607475584309,"results":"32","hashOfConfig":"31"},{"size":99,"mtime":1607323122426,"results":"33","hashOfConfig":"31"},{"size":4197,"mtime":1607475584371,"results":"34","hashOfConfig":"31"},{"size":5732,"mtime":1607475584346,"results":"35","hashOfConfig":"31"},{"size":4184,"mtime":1607475584310,"results":"36","hashOfConfig":"31"},{"size":762,"mtime":1607323122422,"results":"37","hashOfConfig":"31"},{"size":5746,"mtime":1607475584370,"results":"38","hashOfConfig":"31"},{"size":110,"mtime":1607323122426,"results":"39","hashOfConfig":"31"},{"size":376,"mtime":1607323122426,"results":"40","hashOfConfig":"31"},{"size":3301,"mtime":1607323122423,"results":"41","hashOfConfig":"31"},{"size":2895,"mtime":1607323122426,"results":"42","hashOfConfig":"31"},{"size":1615,"mtime":1607409914015,"results":"43","hashOfConfig":"31"},{"size":2899,"mtime":1607323122424,"results":"44","hashOfConfig":"31"},{"size":1537,"mtime":1607323122424,"results":"45","hashOfConfig":"31"},{"size":678,"mtime":1607408395886,"results":"46","hashOfConfig":"31"},{"size":850,"mtime":1607323122424,"results":"47","hashOfConfig":"31"},{"size":769,"mtime":1607323122424,"results":"48","hashOfConfig":"31"},{"size":1069,"mtime":1607323122426,"results":"49","hashOfConfig":"31"},{"size":430,"mtime":1607323122423,"results":"50","hashOfConfig":"31"},{"size":2693,"mtime":1607323122423,"results":"51","hashOfConfig":"31"},{"size":4581,"mtime":1607325708145,"results":"52","hashOfConfig":"31"},{"size":434,"mtime":1607323122422,"results":"53","hashOfConfig":"31"},{"size":971,"mtime":1607323122423,"results":"54","hashOfConfig":"31"},{"size":222,"mtime":1607323122426,"results":"55","hashOfConfig":"31"},{"size":676,"mtime":1607323122424,"results":"56","hashOfConfig":"31"},{"size":1150,"mtime":1607323122424,"results":"57","hashOfConfig":"31"},{"size":763,"mtime":1607323122423,"results":"58","hashOfConfig":"31"},{"size":758,"mtime":1607323122423,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"5ifeb6",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"E:\\GITHUB\\foochat\\client\\src\\index.js",[],["125","126"],"E:\\GITHUB\\foochat\\client\\src\\App.js",[],"E:\\GITHUB\\foochat\\client\\src\\configs\\browserHistory.js",[],"E:\\GITHUB\\foochat\\client\\src\\components\\Authentication\\LoginAdmin.js",[],"E:\\GITHUB\\foochat\\client\\src\\components\\Authentication\\RegisterUser.js",[],"E:\\GITHUB\\foochat\\client\\src\\components\\Authentication\\LoginUser.js",[],"E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\Chat.js",[],"E:\\GITHUB\\foochat\\client\\src\\components\\Authentication\\RegisterAdmin.js",[],"E:\\GITHUB\\foochat\\client\\src\\configs\\url.js",[],"E:\\GITHUB\\foochat\\client\\src\\configs\\socket.js",[],"E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\ChatList\\ChatList.js",[],"E:\\GITHUB\\foochat\\client\\src\\contexts\\ConversationState.js",[],"E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\ChatBox\\ChatBox.js",["127","128"],"import React, { useContext, useEffect } from \"react\";\r\nimport TitleBar from \"./TitleBar\";\r\nimport MessageList from \"./MessageList\";\r\nimport InputPanel from \"./InputPanel\";\r\nimport { GlobalContext } from \"../../../contexts/ConversationState\";\r\nimport socket from \"../../../configs/socket\";\r\nimport EmojiPicker from './EmojiPicker';\r\n// import { history } from '../../../configs/browserHistory';\r\n\r\nconst ChatBox = ({ chatId, userId }) => {\r\n\tconst {\r\n\t\tgetConversation,\r\n\t\tupdateConversation,\r\n\t\taddConversation,\r\n\t\taddNewMessage,\r\n\t\tisReady,\r\n\t} = useContext(GlobalContext);\r\n\tconst cvs = getConversation(chatId);\r\n\tconst otherUsername =\r\n\t\t(userId === cvs.firstId ? cvs.secondUserName : cvs.firstUserName) || \"\";\r\n\tuseEffect(() => {\r\n\t\tif (isReady) {\r\n\t\t\tsocket.on(\"receive-message\", ({ conversation, newMessage }) => {\r\n\t\t\t\tconst cvs = getConversation(conversation._id);\r\n\t\t\t\tif (cvs) {\r\n\t\t\t\t\tif (localStorage.username === conversation.lastSender)\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tupdateConversation(conversation);\r\n\t\t\t\t\taddNewMessage({\r\n\t\t\t\t\t\tconversation: conversation,\r\n\t\t\t\t\t\tmessage: newMessage,\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\taddConversation(conversation);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}, [isReady]);\r\n\r\n\treturn (\r\n\t\t<div className=\"float-2\">\r\n\t\t\t<div className=\"chat-box\">\r\n\t\t\t\t<TitleBar name={otherUsername} className=\"self-start\" />\r\n\t\t\t\t<MessageList name={otherUsername} conversation={cvs} />\r\n\t\t\t\t<div className=\"w-full px-4 mt-1\" id=\"input-messages\">\r\n\t\t\t\t\t<InputPanel\r\n\t\t\t\t\t\tcid={chatId}\r\n\t\t\t\t\t\tuid={userId}\r\n\t\t\t\t\t\tclassName=\"w-7/8 self-end\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ChatBox;\r\n","E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\User\\Info.js",["129","130","131","132"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport request from \"request\";\r\nimport url from \"../../../configs/url\";\r\nimport { GlobalContext } from \"../../../contexts/ConversationState\";\r\n\r\nconst Info = (props) => {\r\n\tconst [user, setUser] = useState([]);\r\n\tconst [block, setBlock] = useState(false);\r\n\tconst [unblock, setUnBlock] = useState(false);\r\n\tconst { getConversation, isReady } = useContext(GlobalContext);\r\n\tconst cvs = getConversation(props.chatId);\r\n\tlet idGuess = \"\";\r\n\tif (cvs) {\r\n\t\tidGuess = props.userId === cvs.firstId ? cvs.secondId : cvs.firstId;\r\n\t\tconsole.log(idGuess);\r\n\t}\r\n\tlet info = [];\r\n\tif (idGuess !== \"\") {\r\n\t\tinfo = {\r\n\t\t\tid: idGuess,\r\n\t\t};\r\n\t}\r\n\r\n\tconst handleBlock = (idBlock) => {\r\n\t\tif (isReady) {\r\n\t\t\tconst process = {\r\n\t\t\t\turi: url.LOCAL + \"/api/block_chat\",\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t\tAuthorization: `Bearer ${localStorage.chattoken}`,\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tid: idBlock,\r\n\t\t\t\t}),\r\n\t\t\t};\r\n\t\t\trequest.post(process, (err, httpResponse, body) => {\r\n\t\t\t\tif (httpResponse.statusCode === 200) {\r\n\t\t\t\t\tsetBlock(true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isReady) {\r\n\t\t\tconst getUser = () => {\r\n\t\t\t\tconst process = {\r\n\t\t\t\t\turi: url.LOCAL + `/api/getuser`,\r\n\t\t\t\t\tmethod: \"POST\",\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t\t\tAuthorization: `Bearer ${localStorage.chattoken}`,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\t...info,\r\n\t\t\t\t\t}),\r\n\t\t\t\t};\r\n\r\n\t\t\t\trequest.post(process, (err, httpResponse, body) => {\r\n\t\t\t\t\tvar objBody = JSON.parse(body);\r\n\t\t\t\t\tif (httpResponse.statusCode === 200) {\r\n\t\t\t\t\t\tsetUser(objBody.result);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t\tgetUser();\r\n\t\t}\r\n\t}, [idGuess]);\r\n\r\n\treturn (\r\n\t\t<div className=\"float-3\">\r\n\t\t\t{user.rule === \"user\" ? (\r\n\t\t\t\t<div className=\"info-user\">\r\n\t\t\t\t\t<div className=\"px-2 title-bar d-flex align-items-center\">\r\n\t\t\t\t\t\t<h2>Công cụ</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"info\">\r\n\t\t\t\t\t\t<h3 className=\"text-center mb-3\">Thông tin user</h3>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\tID:{\" \"}\r\n\t\t\t\t\t\t\t\t<span className=\"text-border\">{user._id}</span>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\tHọ và tên:\r\n\t\t\t\t\t\t\t\t<span className=\"text-border\">\r\n\t\t\t\t\t\t\t\t\t{user.fullname}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\tUsername:{\" \"}\r\n\t\t\t\t\t\t\t\t<span className=\"text-border\">\r\n\t\t\t\t\t\t\t\t\t{user.username}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\tEmail:{\" \"}\r\n\t\t\t\t\t\t\t\t<span className=\"text-border\">\r\n\t\t\t\t\t\t\t\t\t{user.email}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<hr className=\"my-5\" />\r\n\t\t\t\t\t<div className=\"tool\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() => handleBlock(idGuess)}\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\tclassName=\"btn btn-danger\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tCấm chat\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t\"\"\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Info;\r\n","E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\ChatList\\ListConversation.js",["133","134"],"import React, { useContext, useEffect } from 'react';\r\nimport Conversation from './Conversation';\r\n\r\nimport { GlobalContext } from '../../../contexts/ConversationState';\r\nimport { history } from '../../../configs/browserHistory';\r\nimport socket from '../../../configs/socket';\r\nconst ListConversation = props => {\r\n  const { conversations, addConversation } = useContext(\r\n    GlobalContext\r\n  );\r\n\r\n  const myUsername = localStorage.username;\r\n  const myId = localStorage.userId;\r\n\r\n  useEffect(() => {\r\n    socket.on('add-new-conversation', ({ conversation, receiveId }) => {\r\n      if (myId === receiveId) {\r\n        addConversation(conversation);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (conversations) {\r\n      conversations.forEach(el => {\r\n        socket.emit('user-join-room', { roomId: el._id });\r\n      });\r\n      if (!props.chatId && conversations.length > 0) {\r\n        history.replace(`/admin/chat/${conversations[0]._id}`);\r\n      }\r\n    }\r\n  }, [conversations.length]);\r\n\r\n  return (\r\n    <div className='flex flex-col items-center overflow-y-auto flex-grow max-height'>\r\n      <div className='w-full px-2 overflow-y-auto'>\r\n        {conversations.map(el => (\r\n          <Conversation\r\n            key={el._id}\r\n            conversation={el}\r\n            otherName={\r\n              myUsername === el.firstUserName\r\n                ? el.secondUserName\r\n                : el.firstUserName\r\n            }\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListConversation;\r\n","E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\User\\Panel.js",[],"E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\ChatList\\SearchBar.js",[],"E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\ChatList\\ListSearchTile.js",[],"E:\\GITHUB\\foochat\\client\\src\\contexts\\AppReducer.js",["135"],"export default (state, action) => {\r\n  switch (action.type) {\r\n    case 'update': {\r\n      return { conversations: [...action.conversations], ready: true };\r\n    }\r\n\r\n    case 'toggle-emoji': {\r\n      return { ...state, isEmojiShow: action.status };\r\n    }\r\n\r\n    case 'refresh': {\r\n      return { ...state, refresh: !state.refresh };\r\n    }\r\n\r\n    case 'update-single': {\r\n      const newArray = state.conversations.filter(\r\n        obj => action.conversation._id !== obj._id\r\n      );\r\n      return {\r\n        ...state,\r\n        conversations: [action.conversation, ...newArray],\r\n        refresh: !state.refresh\r\n      };\r\n    }\r\n\r\n    case 'add': {\r\n      return { conversations: [action.conversation, ...state.conversations] };\r\n    }\r\n\r\n    case 'update-input': {\r\n      return { ...state, inputEvent: action.inputEvent };\r\n    }\r\n\r\n    case 'new-message': {\r\n      console.log(action);\r\n      return {\r\n        ...state,\r\n        newMessage: { cid: action.conversation._id, message: action.message }\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\ChatBox\\TitleBar.js",[],"E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\ChatBox\\MessageList.js",["136","137"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport SingleMessage from './SingleMessage';\r\nimport { animateScroll } from 'react-scroll';\r\nimport { GlobalContext } from '../../../contexts/ConversationState';\r\nimport socket from '../../../configs/socket';\r\nimport TypingIndicator from './TypingIndicator';\r\nimport url from '../../../configs/url';\r\nimport request from 'request';\r\n\r\nconst MessageList = props => {\r\n  const { isReady, newMessage } = useContext(GlobalContext);\r\n\r\n  const cvs = props.conversation;\r\n  const userId = localStorage.userId;\r\n  const [messages, setMessages] = useState([]);\r\n  const [otherTyping, setOtherTyping] = useState(false);\r\n  const [otherName, setOtherName] = useState('');\r\n  const [isLoading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setMessages([]);\r\n    if (cvs._id) {\r\n      const options = {\r\n        uri: `${url.LOCAL}/api/get-messages?cid=${cvs._id}`,\r\n        method: 'get',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${localStorage.chattoken}`\r\n        }\r\n      };\r\n\r\n      request.get(options, function(err, httpResponse, body) {\r\n        if (httpResponse.statusCode === 200) {\r\n          const { messageList } = JSON.parse(body);\r\n          setMessages(messageList);\r\n          setLoading(false);\r\n        }\r\n      });\r\n      socket.on('user-typing', ({ cid, uid, isTyping, name }) => {\r\n        if (cid === cvs._id && uid !== userId) {\r\n          setOtherName(name);\r\n          if (isTyping !== otherTyping) {\r\n            setOtherTyping(isTyping);\r\n          } else {\r\n            setOtherTyping(false);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }, [isReady, cvs._id]);\r\n\r\n  useEffect(() => {\r\n    if (cvs._id && newMessage) {\r\n      if (cvs._id === newMessage.cid) {\r\n        setMessages([...messages, newMessage.message]);\r\n      }\r\n    }\r\n  }, [newMessage]);\r\n  \r\n  useEffect(() => {\r\n    animateScroll.scrollToBottom({\r\n      containerId: 'messages',\r\n      smooth: false,\r\n      duration: 0\r\n    });\r\n  }, [messages, otherTyping, isLoading]);\r\n\r\n  return (\r\n    <div\r\n      className='bg-white flex-grow d-flex flex-col overflow-y-auto max-height'\r\n      id='messages'\r\n    >\r\n      {isLoading ? (\r\n        // <div className='spinner-md flex-grow'>A</div>\r\n        ''\r\n      ) : (\r\n        messages.map(el => (\r\n          <SingleMessage\r\n            key={el._id || Date.now()}\r\n            name={props.name}\r\n            message={el}\r\n            myId={userId}\r\n          />\r\n        ))\r\n      )}\r\n\r\n      {otherTyping ? <TypingIndicator name={otherName} /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageList;\r\n","E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\ChatBox\\InputPanel.js",["138","139"],"import React, { useRef, useContext, useState, useEffect } from \"react\";\r\nimport request from \"request\";\r\nimport url from \"../../../configs/url\";\r\nimport { GlobalContext } from \"../../../contexts/ConversationState\";\r\nimport socket from \"../../../configs/socket\";\r\nimport EmojiPicker from \"emoji-picker-react\";\r\n\r\nconst InputPanel = ({ cid, uid }) => {\r\n\tconsole.log(cid + \", \" + uid);\r\n\tconst chatFieldRef = useRef(null);\r\n\tconst { updateConversation, addNewMessage, isReady } = useContext(\r\n\t\tGlobalContext\r\n\t);\r\n\tconst [isSending, setSending] = useState(false);\r\n\tconst [block, setBlock] = useState(false);\r\n\r\n\tconst [openEmoji, setOpenEmoji] = useState(\"none\");\r\n\tconsole.log(openEmoji);\r\n\tconst [chosenEmoji, setChosenEmoji] = useState(null);\r\n\r\n\tconst onEmojiClick = (event, emojiObject) => {\r\n\t\tsetChosenEmoji(emojiObject);\r\n\t\tchatFieldRef.current.value += emojiObject.emoji;\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isReady) {\r\n\t\t\tconst info = {\r\n\t\t\t\tid: uid,\r\n\t\t\t};\r\n\t\t\tconst process = {\r\n\t\t\t\turi: url.LOCAL + `/api/getuser`,\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t\tAuthorization: `Bearer ${localStorage.chattoken}`,\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t...info,\r\n\t\t\t\t}),\r\n\t\t\t};\r\n\r\n\t\t\trequest.post(process, (err, httpResponse, body) => {\r\n\t\t\t\tvar objBody = JSON.parse(body);\r\n\t\t\t\tif (httpResponse.statusCode === 200) {\r\n\t\t\t\t\tconsole.log(objBody.result.isBlock);\r\n\t\t\t\t\tsetBlock(objBody.result.isBlock);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}, [isReady]);\r\n\r\n\tlet timeout = null;\r\n\tconst myUsername = localStorage.username;\r\n\tconst sendMessage = () => {\r\n\t\tconst content = chatFieldRef.current.value;\r\n\t\tchatFieldRef.current.value = \"\";\r\n\t\tif (!content || content === \"\") return;\r\n\t\tsetSending(true);\r\n\t\tconst options = {\r\n\t\t\turi: `${url.LOCAL}/api/send-message`,\r\n\t\t\tmethod: \"post\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\tAuthorization: `Bearer ${localStorage.chattoken}`,\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tcid: cid,\r\n\t\t\t\tuid: uid,\r\n\t\t\t\tcontent: content,\r\n\t\t\t\tusername: myUsername,\r\n\t\t\t}),\r\n\t\t};\r\n\r\n\t\trequest.post(options, function (err, httpResponse, body) {\r\n\t\t\tif (httpResponse.statusCode !== 200) {\r\n\t\t\t} else {\r\n\t\t\t\tconst obj = JSON.parse(body);\r\n\t\t\t\taddNewMessage({\r\n\t\t\t\t\tconversation: obj.conversation,\r\n\t\t\t\t\tmessage: obj.newMessage,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tupdateConversation(obj.conversation);\r\n\t\t\t\tif (timeout) clearTimeout(timeout);\r\n\t\t\t\tstoppedTyping();\r\n\t\t\t\tsocket.emit(\"user-send-message\", {\r\n\t\t\t\t\tconversation: obj.conversation,\r\n\t\t\t\t\tnewMessage: obj.newMessage,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tsetSending(false);\r\n\t\t});\r\n\t};\r\n\r\n\tconst stoppedTyping = () => {\r\n\t\tsocket.emit(\"user-typing-message\", {\r\n\t\t\tcid: cid,\r\n\t\t\tuid: uid,\r\n\t\t\tisTyping: false,\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"w-full h-16 bg-white flex p-2\">\r\n\t\t\t<div className=\"flex-grow flex-shrink d-flex align-items-center position-relative\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tdisabled={block}\r\n\t\t\t\t\ttype=\"search\"\r\n\t\t\t\t\tref={chatFieldRef}\r\n\t\t\t\t\tclassName=\"px-4 py-2 w-full bg-gray-300 text-gray-900 rounded-full outline-none truncate\"\r\n\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\tsocket.emit(\"user-typing-message\", {\r\n\t\t\t\t\t\t\tcid: cid,\r\n\t\t\t\t\t\t\tuid: uid,\r\n\t\t\t\t\t\t\tisTyping: true,\r\n\t\t\t\t\t\t\tname: myUsername,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (timeout) clearTimeout(timeout);\r\n\t\t\t\t\t\ttimeout = setTimeout(stoppedTyping, 1500);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonKeyPress={(event) => {\r\n\t\t\t\t\t\tif (event.key === \"Enter\" || event.keyCode === 13) {\r\n\t\t\t\t\t\t\tsendMessage();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tplaceholder={\r\n\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t? \"You have blocked chat\"\r\n\t\t\t\t\t\t\t: \"Input your message...\"\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"sticker position-absolute\"\r\n\t\t\t\t\tstyle={{ display: openEmoji }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<EmojiPicker onEmojiClick={onEmojiClick} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"btn-emoji\"\r\n\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\tsetOpenEmoji(openEmoji === \"none\" ? \"block\" : \"none\")\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstyle={{display: block?'none':'block'}}\r\n\t\t\t\t></div>\r\n\t\t\t</div>\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"flex-shrink-0 my-1 mx-2 bg-blue-500 rounded-full  focus:outline-none\"\r\n\t\t\t\tstyle={{ flexBasis: 50 }}\r\n\t\t\t\tonClick={sendMessage}\r\n\t\t\t\tdisabled={isSending||block}\r\n\t\t\t>\r\n\t\t\t\t{isSending ? (\r\n\t\t\t\t\t<div className=\"spinner\">A</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className=\"flex items-center justify-center text-white \">\r\n\t\t\t\t\t\t<svg\r\n\t\t\t\t\t\t\tclassName=\"h-4 w-4 fill-current\"\r\n\t\t\t\t\t\t\tviewBox=\"0 0 1000 1000\"\r\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<path d=\"M10,991.1l980-493.2L10,8.9l101.1,415.7l532.7,73.4l-532.7,70.5L10,991.1z\" />\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default InputPanel;\r\n","E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\ChatBox\\EmojiPicker.js",[],"E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\ChatList\\Conversation.js",[],"E:\\GITHUB\\foochat\\client\\src\\configs\\getAvatar.js",[],"E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\ChatList\\SearchTile.js",[],"E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\User\\LogoutButton.js",[],"E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\ChatBox\\SingleMessage.js",[],"E:\\GITHUB\\foochat\\client\\src\\components\\Chat\\ChatBox\\TypingIndicator.js",[],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":7,"column":8,"nodeType":"146","messageId":"147","endLine":7,"endColumn":19},{"ruleId":"148","severity":1,"message":"149","line":38,"column":5,"nodeType":"150","endLine":38,"endColumn":14,"suggestions":"151"},{"ruleId":"144","severity":1,"message":"152","line":8,"column":9,"nodeType":"146","messageId":"147","endLine":8,"endColumn":14},{"ruleId":"144","severity":1,"message":"153","line":9,"column":9,"nodeType":"146","messageId":"147","endLine":9,"endColumn":16},{"ruleId":"144","severity":1,"message":"154","line":9,"column":18,"nodeType":"146","messageId":"147","endLine":9,"endColumn":28},{"ruleId":"148","severity":1,"message":"155","line":69,"column":5,"nodeType":"150","endLine":69,"endColumn":14,"suggestions":"156"},{"ruleId":"148","severity":1,"message":"157","line":21,"column":6,"nodeType":"150","endLine":21,"endColumn":8,"suggestions":"158"},{"ruleId":"148","severity":1,"message":"159","line":32,"column":6,"nodeType":"150","endLine":32,"endColumn":28,"suggestions":"160"},{"ruleId":"161","severity":1,"message":"162","line":1,"column":1,"nodeType":"163","endLine":44,"endColumn":3},{"ruleId":"148","severity":1,"message":"164","line":51,"column":6,"nodeType":"150","endLine":51,"endColumn":24,"suggestions":"165"},{"ruleId":"148","severity":1,"message":"166","line":59,"column":6,"nodeType":"150","endLine":59,"endColumn":18,"suggestions":"167"},{"ruleId":"144","severity":1,"message":"168","line":19,"column":9,"nodeType":"146","messageId":"147","endLine":19,"endColumn":20},{"ruleId":"148","severity":1,"message":"169","line":51,"column":5,"nodeType":"150","endLine":51,"endColumn":14,"suggestions":"170"},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'EmojiPicker' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addConversation', 'addNewMessage', 'getConversation', and 'updateConversation'. Either include them or remove the dependency array.","ArrayExpression",["173"],"'block' is assigned a value but never used.","'unblock' is assigned a value but never used.","'setUnBlock' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'info' and 'isReady'. Either include them or remove the dependency array.",["174"],"React Hook useEffect has missing dependencies: 'addConversation' and 'myId'. Either include them or remove the dependency array.",["175"],"React Hook useEffect has missing dependencies: 'conversations' and 'props.chatId'. Either include them or remove the dependency array.",["176"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'otherTyping' and 'userId'. Either include them or remove the dependency array.",["177"],"React Hook useEffect has missing dependencies: 'cvs._id' and 'messages'. Either include them or remove the dependency array. You can also do a functional update 'setMessages(m => ...)' if you only need 'messages' in the 'setMessages' call.",["178"],"'chosenEmoji' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'uid'. Either include it or remove the dependency array.",["179"],"no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},"Update the dependencies array to be: [addConversation, addNewMessage, getConversation, isReady, updateConversation]",{"range":"194","text":"195"},"Update the dependencies array to be: [idGuess, info, isReady]",{"range":"196","text":"197"},"Update the dependencies array to be: [addConversation, myId]",{"range":"198","text":"199"},"Update the dependencies array to be: [conversations, conversations.length, props.chatId]",{"range":"200","text":"201"},"Update the dependencies array to be: [isReady, cvs._id, userId, otherTyping]",{"range":"202","text":"203"},"Update the dependencies array to be: [cvs._id, messages, newMessage]",{"range":"204","text":"205"},"Update the dependencies array to be: [isReady, uid]",{"range":"206","text":"207"},[1176,1185],"[addConversation, addNewMessage, getConversation, isReady, updateConversation]",[1736,1745],"[idGuess, info, isReady]",[675,677],"[addConversation, myId]",[980,1002],"[conversations, conversations.length, props.chatId]",[1717,1735],"[isReady, cvs._id, userId, otherTyping]",[1915,1927],"[cvs._id, messages, newMessage]",[1477,1486],"[isReady, uid]"]